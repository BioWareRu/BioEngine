@using Sitko.Core.Storage
@using Sitko.Core.Storage.ImgProxy
@using System.IO
@using System.Linq.Expressions
@using System.Runtime.Intrinsics
@using AntDesign.TableModels
@using BioEngine.Admin.Extensions
@using BioEngine.Core
@using BioEngine.Core.Extensions
@using JetBrains.Annotations
@inherits BaseAntListComponent<StorageNode>
<AntDesign.Breadcrumb>
    @foreach (var part in Parts)
    {
        if (part == Parts.Last())
        {
            <AntDesign.BreadcrumbItem>@part.name</AntDesign.BreadcrumbItem>
        }
        else
        {
            <AntDesign.BreadcrumbItem>
                @if (UseNavigation)
                {
                    <a href="@GetUrlPath("/Storage", part.path)">@part.name</a>
                }
                else
                {
                    <a href="#" @onclick="@(() => LoadDataAsync(part.path))" @onclick:preventDefault>@part.name</a>
                }

            </AntDesign.BreadcrumbItem>
        }
    }

</AntDesign.Breadcrumb>
<Divider/>
<Spin Spinning="@IsLoading">
    <Row Gutter="24">
        <AntDesign.Col Span="8">
            <EditForm Model="_storageItems">
                <AntStorageItemsInput
                    TValue="List<StorageItem>"
                    Storage="@Storage"
                    ButtonText=""
                    MaxAllowedFiles="10"
                    @bind-Value="_storageItems"
                    UploadPath="@GetStoragePath(CurrentPath)"
                    MaxFileSize="@(2 * 1024 * 1024)"
                    GenerateMetadata="@StorageUploadExtensions.GenerateMetadataAsync"
                    OnChange="UploadFilesAsync">
                    <Button Icon="upload"></Button>
                </AntStorageItemsInput>
                <span title="Создать папку">
                    <Button OnClick="ShowFolderDialogAsync" Icon="folder-add"></Button>
                </span>
                <span title="Обновить метаданные">
                    <Button Danger OnClick="RefreshMetadataAsync" Icon="redo"></Button>
                </span>
            </EditForm>

        </AntDesign.Col>
    </Row>
    <Divider/>
    <Table TItem="StorageNode"
           @ref="Table"
           DataSource="@Items"
           RemoteDataSource="true"
           Total="@Count"
           OnChange="@(async model => await OnChangeAsync(model))"
           @bind-PageIndex="@PageIndex"
           @bind-PageSize="@PageSize"
           @bind-SelectedRows="@_selectedRows">
        @if (SelectMode)
        {
            <Selection Type="@(IsMultiple ? "checkbox" : "radio")" Disabled="@(context.Type == StorageNodeType.Directory)"/>
        }
        <Column TData="StorageNodeType" Style="width: 100px; text-align: center; font-size: 2.5em;">
            @if (context.Type == StorageNodeType.Directory)
            {
                <i class="fas fa-folder"></i>
            }
            else
            {
                var item = context.StorageItem;
                var metadata = item.GetMetadata<StorageItemMetadata>();
                if (metadata != null)
                {
                    switch (metadata.Type)
                    {
                        case StorageItemType.File:
                            <span>файл</span>
                            break;
                        case StorageItemType.Image:
                            var title = $"{metadata.ImageMetadata!.Width}x{metadata.ImageMetadata.Height}";
                            var url = ImgProxyUrlGenerator.Resize(item, 100, 100, "fit");
                            <a href="@Storage.PublicUri(item).ToString()" target="_blank">
                                <Avatar Shape="square" Src="@url" Alt="@title"></Avatar>
                            </a>
                            break;
                    }
                }
            }
        </Column>
        <Column Title="Название" @bind-Field="@context.Name" Sortable SorterCompare="(a, b) => 0">
            @if (context.Type == StorageNodeType.Directory)
            {
                if (UseNavigation)
                {
                    <a href="@GetUrlPath(null, context.Name)">@context.Name</a>
                }
                else
                {
                    <a href="#" @onclick="@(() => NavigateAsync(context.Name))" @onclick:preventDefault>@context.Name</a>
                }
            }
            else
            {
                <a target="_blank" href="@Storage.PublicUri(context.StorageItem!).ToString()">@context.Name</a>
            }
        </Column>
        <Column Title="Размер" @bind-Field="@context.Size" Sortable SorterCompare="(a, b) => 0">
            @context.HumanSize
        </Column>
        <Column Title="Дата" @bind-Field="@context.LastModified" Format="dd.MM.yyyy HH:mm:ss" Sortable SorterCompare="(a, b) => 0" DefaultSortOrder="SortDirection.Descending"/>
        <AntListInitializer TEntity="StorageNode" Table="Table" AntListComponent="this"></AntListInitializer>
    </Table>
    @if (SelectMode)
    {
        var text = "Выберите файлы";
        var isEnabled = _selectedRows.Any();
        if (isEnabled)
        {
            text = IsMultiple ? $"Выбрать файлы ({_selectedRows.Count()})" : "Выбрать файл";
        }
        <div class="ant-modal-footer">
            <AntDesign.Button Type="@ButtonType.Primary" Disabled="!isEnabled" OnClick="@SelectItemsAsync">@text</AntDesign.Button>
        </div>
    }
</Spin>
